{"version":3,"sources":["app.js","services/tasks-service.js","tasks/ellipsis.js","tasks/tasks-controller.js","errors/404/error-404-controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['ngRoute']);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.factory('tasksService', ['$http', '$log', function($http, $log) {\n\n  function get(url) {\n    return processAjaxPromise($http.get(url));\n  }\n\n  function post(url, share) {\n    return processAjaxPromise($http.post(url, share));\n  }\n\n  function remove(url) {\n    return processAjaxPromise($http.delete(url));\n  }\n\n  function processAjaxPromise(p) {\n    return p.then(function (result) {\n      var data = result.data;\n      console.log(data);\n      return data.data;\n    })\n    .catch(function (error) {\n      $log.log(error);\n    });\n  }\n\n  return {\n      getTasks: function () {\n      return get('/api/tasks');\n      },\n\n      getTask: function (id) {\n      return get('/api/task/' + id);\n      },\n\n      addTask: function (task) {\n      return post('/api/res', task);\n      }\n    //\n    // deleteShare: function (id) {\n    //   return remove('/api/res/' + id);\n    // }\n  };\n}]);\n","//making a filter\n//$filter('filter') (array, expression, comparator)\napp.filter('ellipsis', function(){\n  return function (input, num) {\n    if(input.length > num ) {\n      var newInputArea = input.slice(0, num) + '...';\n      return newInputArea;\n    } else {\n      return input;\n    }\n};\n});\n","app.config(['$routeProvider', function($routeProvider) {\n  var routeDefinition = {\n    templateUrl: 'static/tasks/tasks.html',\n    controller: 'TasksCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      tasks: ['tasksService', function (tasksService){\n        return tasksService.getTasks();\n      }]\n      }\n  };\n  $routeProvider.when('/', routeDefinition);\n  $routeProvider.when('/tasks', routeDefinition);\n}])\n.controller('TasksCtrl', ['$location', 'tasks', 'tasksService', function ($location, tasks, shareService) {\n\n  var self = this;\n  self.tasks = tasks;\n\n\n}]);\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n"],"sourceRoot":"/source/"}